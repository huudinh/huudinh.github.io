function sendForm(info,redirect){function message(field){console.error(`Form not send! ${field} not undefined`)}async function createForm(info,redirect){const response=await fetch(`\n            https://richardhuy.com/css/api/sendform?\n            contact_name=${info.iname}&\n            phone=${info.imob}&\n            email_from=${info.iemail}&\n            description=${info.itext}&\n            code_campaign=${info.code_campaign}&\n            name_campaign=${info.name_campaign}&\n            first_link=${info.first_link}&\n            referred=${info.referred}&\n            website=${info.website}&\n            location=${info.location}\n        `),data=await response.json();return window.top.location.href=redirect,console.log("Data",data),data}info.hasOwnProperty("iname")?info.hasOwnProperty("imob")?info.hasOwnProperty("iemail")?info.hasOwnProperty("itext")?info.hasOwnProperty("code_campaign")?info.hasOwnProperty("name_campaign")?info.hasOwnProperty("first_link")?info.hasOwnProperty("referred")?info.hasOwnProperty("website")?info.hasOwnProperty("location")?createForm(info,redirect):message("location"):message("website"):message("referred"):message("first_link"):message("name_campaign"):message("code_campaign"):message("itext"):message("iemail"):message("imob"):message("iname")}function getValue(querySelector){return document.querySelector(querySelector).value}function disableButton(form,button){const text=document.querySelector(button).value;document.querySelector(button).setAttribute("disabled",""),document.querySelector(button).value="Đang gửi thông tin...",document.querySelector(button).style="background:#ccc;color:#000",document.querySelector(form).reset(),setTimeout(()=>{document.querySelector(button).value=text,document.querySelector(button).removeAttribute("disabled"),document.querySelector(button).removeAttribute("style")},5e3)}const getLocation=async()=>{try{const response=await fetch("https://ipinfo.io/json"),data=await response.json();return data}catch(err){return console.log(err),""}};function getParam(p){var match=RegExp("[?&]"+p+"=([^&]*)").exec(window.location.search);return match&&decodeURIComponent(match[1].replace(/\+/g," "))}function addToStorage(key,value){var expiryPeriod=7776e6,expiryDate,record={value:value,expiryDate:(new Date).getTime()+7776e6};localStorage.setItem(key,JSON.stringify(record))}function storeGclid(){var gclidParam=getParam("gclid");gclidParam&&addToStorage("gclid",gclidParam)}function addGclid(){storeGclid();var gclidFormFieldList=document.querySelectorAll('input[name="referred"]'),currDate=(new Date).getTime(),gclsrcParam=getParam("gclsrc"),isGclsrcValid=!gclsrcParam||-1!==gclsrcParam.indexOf("aw"),gclid=JSON.parse(localStorage.getItem("gclid")),isGclidValid=gclid&&currDate<gclid.expiryDate;if(gclidFormFieldList&&isGclidValid&&isGclsrcValid)for(let i=0;i<gclidFormFieldList.length;i++)gclidFormFieldList[i].value=gclid.value}function Validator(options){let selectorRules={};const getParent=(element,selector)=>{for(;element.parentElement;){if(element.parentElement.matches(selector))return element.parentElement;element=element.parentElement}},validate=(inputElement,rule)=>{let formGroup=getParent(inputElement,options.formGroupSelector),errorElement=formGroup.querySelector(options.errorSelector),rules=selectorRules[rule.selector];for(let i=0;i<rules.length;++i){switch(inputElement.type){case"radio":case"checkbox":errorMessage=rules[i](formElement.querySelector(rule.selector+":checked"));break;default:errorMessage=rules[i](inputElement.value)}if(errorMessage)break}return errorMessage?(errorElement.innerText=errorMessage,formGroup.classList.add("invalid")):(errorElement.innerText="",formGroup.classList.remove("invalid")),!errorMessage};let formElement=document.querySelector(options.form);formElement&&(formElement.onsubmit=function(e){e.preventDefault();let isFormValid=!0;if(options.rules.forEach(rule=>{let inputElement=formElement.querySelector(rule.selector),isValid;validate(inputElement,rule)||(isFormValid=!1)}),isFormValid)if("function"==typeof options.onSubmit){let enableInputs=formElement.querySelectorAll("[name]:not([disable])"),formValues=Array.from(enableInputs).reduce((function(values,input){switch(input.type){case"radio":values[input.name]=formElement.querySelector('input[name="'+input.name+'"]:checked').value;break;case"checkbox":if(input.matches(":checked"))return values[input.name]=[],values;Array.isArray(values[input.name])||(values[input.name]=[]),values[input.name].push(input.value);break;case"file":values[input.name]=input.files;break;default:values[input.name]=input.value}return values}),{});options.onSubmit(formValues)}else formElement.submit()},options.rules.forEach(rule=>{Array.isArray(selectorRules[rule.selector])?selectorRules[rule.selector].push(rule.test):selectorRules[rule.selector]=[rule.test];let inputElements=formElement.querySelectorAll(rule.selector);Array.from(inputElements).forEach(inputElement=>{inputElement.onblur=()=>{validate(inputElement,rule)},inputElement.oninput=()=>{let formGroup=getParent(inputElement,options.formGroupSelector),errorElement;formGroup.querySelector(options.errorSelector).innerText="",formGroup.classList.remove(".invalid")}})}))}window.addEventListener("load",addGclid),function addInput(){let firstLinkFieldList=document.querySelectorAll('input[name="first_link"]'),locationFieldList=document.querySelectorAll('input[name="location"]'),websiteReferFieldList=document.querySelectorAll('input[name="website"]');if(firstLinkFieldList)for(let i=0;i<firstLinkFieldList.length;i++)firstLinkFieldList[i].value=window.location.href;if(locationFieldList)for(let i=0;i<locationFieldList.length;i++)getLocation().then(data=>{locationFieldList[i].value=data.city});let refer=document.referrer;if(refer||(refer="website"),websiteReferFieldList)for(let i=0;i<websiteReferFieldList.length;i++)websiteReferFieldList[i].value=refer}(),Validator.isRequired=(selector,message)=>({selector:selector,test:function(value){return value?void 0:message||"Vui lòng nhập trường này!"}}),Validator.isEmail=(selector,message)=>({selector:selector,test:function(value){let regex;return/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(value)?void 0:message||"Địa chỉ Email chưa chính xác"}}),Validator.isMobile=(selector,message)=>({selector:selector,test:function(value){let regex;return/(84|0[3|5|7|8|9])+([0-9]{8})\b/g.test(value)?void 0:message||"Số điện thoại chưa chính xác"}}),Validator.minLength=(selector,min,message)=>({selector:selector,test:function(value){return value.length>=min?void 0:message||`Vui lòng nhập tối thiểu ${min} ký tự`}}),Validator.isConfirmed=(selector,getConfirmValue,message)=>({selector:selector,test:function(value){return value==getConfirmValue()?void 0:message||"Giá trị nhập vào không chính xác"}}),Validator.addInput=(selector,getInput)=>({selector:selector,test:function(){document.querySelector(selector).value=getInput()}});